[config]
default_to_workspace = false
skip_core_tasks = true

[tasks.deps-wasm]
script = '''
cargo install wasm-bindgen-cli
'''

[tasks.deps-npm]
script = '''
npm install
'''

[tasks.deps-docker]
script = '''
docker pull ghcr.io/hyperledger/solang@sha256:8776a9bd756664f7bf8414710d1a799799bf6fedc1c8f9f0bda17e76749dea7a 
'''

[tasks.deps]
dependencies = ["deps-wasm", "deps-npm", "deps-docker"]

[tasks.build-server]
script = '''
cargo build --release --target wasm32-unknown-unknown
wasm-bindgen --out-dir ./packages/app/assets/wasm --target web --typescript ./target/wasm32-unknown-unknown/release/demo_lsp_browser.wasm
'''

[tasks.build-bindings]
script = '''
cargo run -p generate-bindings -- --target $(pwd)/packages/_generated/commontypes/src
'''

[tasks.build-app]
script = '''
npm run build --workspace=packages/app
'''

[tasks.build-frontend]
script = '''
npm run build --workspace=packages/frontend
'''

[tasks.build-backend]
script = '''
cargo build -p backend --release
'''

[tasks.build]
dependencies = ["build-server", "build-bindings", "build-app","build-frontend", "build-backend"]

[tasks.clean-server]
script = '''
cargo clean
'''

[tasks.clean-bindings]
script = '''
rm -rf packages/_generated/commontypes/src
'''

[tasks.clean-app]
script = '''
rm -rf packages/app/dist
rm -rf packages/app/assets/wasm
'''

[tasks.clean-frontend]
script = '''
rm -rf packages/frontend/.next
'''

[tasks.clean]
dependencies = ["clean-server", "clean-app", "clean-frontend"]

[tasks.format]
script = '''
cargo +nightly fmt --all
'''

[tasks.run-server]
script = '''
./target/release/backend --frontend_folder packages/app/dist --port 4444
'''

[tasks.run-frontend]
script = '''
npm run start --workspace=packages/frontend
'''

[tasks.run]
run_task = { name = ["run-server", "run-frontend"], parallel = true }

[tasks.test-backend]
script = '''
cargo test
'''

[tasks.test-app]
script = '''
npm run test --workspace=packages/app
'''

[tasks.test-frontend]
script = '''
npm run test --workspace=packages/frontend
'''

[tasks.test]
dependencies = ["test-backend", "test-app", "test-frontend"]

[tasks.docker-build]
script = '''
docker build -t solang-playground .  
'''

[tasks.docker-run]
script = '''
docker run \
	  --runtime=sysbox-runc \
	  --name playground \
	  --detach \
	  --volume /tmp:/tmp \
	  --publish 9000:9000 \
	  solang-playground
'''

[tasks.docker-log]
script = '''
docker logs playground
'''
